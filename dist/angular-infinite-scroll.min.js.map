{"version":3,"sources":["webpack:///webpack/bootstrap ab6eba65cf13794ac34e","webpack:///./src/module.ts","webpack:///./src/descriptor.ts","webpack:///./src/scroller-factory.ts","webpack:///./src/scroll-detector.ts","webpack:///./src/elements-manager.ts","webpack:///./src/scroller.ts","webpack:///./src/revealer-elements-manager.ts","webpack:///./src/dom-manager.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","descriptor_1","scroller_factory_1","angular","directive","transclude","link","scope","element","attr","ctrl","linker","descriptor","Descriptor","createFrom","ScrollerFactory","ScrollSettings","this","BufferSize","settingsObject","size","parseInt","isNaN","_a","match","infiniteScroller","indexString","collectionString","settings","CollectionString","IndexString","UseRevealer","undefined","Element","Scope","Settings","scroll_detector_1","elements_manager_1","scroller_1","revealer_elements_manager_1","dom_manager_1","detector","ScrollDetector","domManager","DOMManager","parent","elementsManager","RevealerElementsManager","Scroller","ElementsManager","_this","lastScrollTop","BUFFER_COUNT","SubscribeTo","parentEl","bind","scrollTop","offsetHeight","scrollHeight","OnScrollDown","topElement","children","OnScrollUp","UpdateCollection","newCollection","collection","AddBottom","updateScopes","AddTop","countTillStop","displayFrom","newElement","transcludeElement","PrependElementToContainer","items","unshift","overflowCounter","displayTo","length","item","AppendElementToContainer","push","blockEl","parentBottom","GetScrollBottomPosition","GetElementBottomPosition","RemoveTop","hasInvisibleChildren","el","GetScrollTopPosition","removeElement","RemoveBottom","GetElementTopPosition","index","childScope","$new","clone","splice","Remove","$destroy","$on","scrollDetector","onCollectionUpdated","onScrollDown","$apply","onScrollUp","$watchCollection","LOAD_COUNT","REVEALER_SIZE_TO_CONTAINER","InitializeRevealer","_i","revealers","revealer","revealerSize","hasItemToBind","hasElementToBind","Items","append","pop","remove","currentDisplayTo","filter","r","newRevealer","createRevealer","container","isRevealerFilled","fillUntil","containerElement","offsetTop","item_1","prepend","shift","scrollTo"],"mappings":"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","file":"angular-infinite-scroll.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ab6eba65cf13794ac34e","import { Descriptor } from './descriptor';\r\nimport { ScrollerFactory } from \"./scroller-factory\";\r\n\r\ndeclare var angular;\r\n\r\nconst scrollerModule = angular.module('angular-infinite-scroller', []);\r\n\r\nscrollerModule.directive('infiniteScroller', () => {\r\n    return {\r\n        transclude: 'element',\r\n        link: (scope: ng.IScope, element: JQLite, attr: ng.IAttributes, ctrl, linker: ng.ITranscludeFunction) => {\r\n            const descriptor = Descriptor.createFrom(scope, element, attr);\r\n            const scroller = ScrollerFactory.createFrom(descriptor, linker);\r\n        }\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/module.ts","export class ScrollSettings {\r\n    BufferSize: number;\r\n\r\n    private constructor() { \r\n        this.BufferSize = 10;\r\n    }\r\n\r\n    static createFrom(attr: ng.IAttributes): ScrollSettings {\r\n        const settingsObject = new ScrollSettings();\r\n\r\n        if (attr['scrollBufferSize']) {\r\n            try {\r\n                const size = parseInt(attr['scrollBufferSize']);\r\n                if (isNaN(size))\r\n                    throw '';\r\n\r\n                settingsObject.BufferSize = size;\r\n            } catch {\r\n                throw \"could not initialize scroll settings, ScrollBufferSize is not a number\";\r\n            }\r\n        }\r\n\r\n        return settingsObject;\r\n    }\r\n}\r\n\r\nexport class Descriptor {\r\n    private constructor() { }\r\n\r\n    public Settings: ScrollSettings;\r\n    public CollectionString: string\r\n    public IndexString: string;\r\n    public UseRevealer: boolean;\r\n    public Scope: ng.IScope;\r\n    public Element: JQLite;\r\n\r\n    static createFrom(scope: ng.IScope, element: JQLite, attr: ng.IAttributes): Descriptor {\r\n        const loop = attr.infiniteScroller,\r\n            match = loop.match(/^\\s*(.+)\\s+in\\s+(.*?)$/),\r\n            indexString = match[1],\r\n            collectionString = match[2];\r\n\r\n        const settings = ScrollSettings.createFrom(attr);\r\n\r\n        const descriptor = new Descriptor();\r\n        descriptor.CollectionString = collectionString;\r\n        descriptor.IndexString = indexString;\r\n        descriptor.UseRevealer = attr['useRevealer'] != undefined;\r\n        descriptor.Element = element;\r\n        descriptor.Scope = scope;\r\n        descriptor.Settings = settings;\r\n\r\n        return descriptor;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/descriptor.ts","import { Descriptor } from \"./descriptor\";\r\nimport { ScrollDetector } from \"./scroll-detector\";\r\nimport { ElementsManager } from \"./elements-manager\";\r\nimport { Scroller } from \"./scroller\";\r\nimport { RevealerElementsManager } from \"./revealer-elements-manager\";\r\nimport { DOMManager } from \"./dom-manager\";\r\n\r\nexport class ScrollerFactory {\r\n    static createFrom(descriptor: Descriptor, linker: ng.ITranscludeFunction): Scroller {\r\n        const detector = new ScrollDetector();\r\n        const domManager = new DOMManager(descriptor.Element.parent());\r\n\r\n        if (descriptor.UseRevealer) {\r\n            const elementsManager = new RevealerElementsManager(descriptor, linker);\r\n            return new Scroller(descriptor, detector, elementsManager);\r\n        } else {\r\n            const elementsManager = new ElementsManager(descriptor, domManager, linker);\r\n            return new Scroller(descriptor, detector, elementsManager);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/scroller-factory.ts","export class ScrollDetector {\r\n    private lastScrollTop = 0;\r\n    private BUFFER_COUNT = 5;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public SubscribeTo = (element: JQLite) => {\r\n        const parent: JQLite = element.parent();\r\n        const parentEl: HTMLElement = parent[0];\r\n\r\n        parent.bind('scroll', () => {\r\n            if (this.lastScrollTop < parentEl.scrollTop) {\r\n                const current = parentEl.scrollTop + parentEl.offsetHeight;\r\n                const bottom = parentEl.scrollHeight;\r\n\r\n                if (current == bottom) {\r\n                    this.OnScrollDown && this.OnScrollDown();\r\n                }\r\n            } else if (this.lastScrollTop > parentEl.scrollTop) {\r\n                const topElement = parentEl.children[0];\r\n                if (topElement && parentEl.scrollTop <= (topElement.scrollHeight * this.BUFFER_COUNT)) {\r\n                    this.OnScrollUp && this.OnScrollUp();\r\n                }\r\n            }\r\n            this.lastScrollTop = parent[0].scrollTop;\r\n        });\r\n    }\r\n\r\n    public OnScrollDown?: () => void;\r\n    public OnScrollUp?: () => void;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/scroll-detector.ts","import { Descriptor } from \"./descriptor\";\r\nimport { IDOMManager } from \"./dom-manager\";\r\n\r\nexport type Item = {\r\n    Element: JQLite,\r\n    Scope: ng.IScope\r\n}\r\n\r\nexport interface IElementsManager {\r\n    UpdateCollection(newCollection: any[]): void;\r\n    AddTop(): void;\r\n    AddBottom(): void;\r\n    RemoveTop(): void;\r\n    RemoveBottom(): void;\r\n}\r\n\r\nexport class ElementsManager implements IElementsManager {\r\n    private collection: any[];\r\n    private items: Item[];\r\n    private displayFrom: number;\r\n    private displayTo: number;\r\n\r\n    constructor(private descriptor: Descriptor, private domManager: IDOMManager, private linker: ng.ITranscludeFunction) {\r\n        this.items = [];\r\n        this.displayFrom = 0;\r\n        this.displayTo = 0;\r\n\r\n        // this way the memory can only leak until the scroller lives\r\n        this.descriptor.Scope.$on('$destroy', () => {\r\n            this.items = [];\r\n        });\r\n    }\r\n\r\n    public UpdateCollection = (newCollection: any[]) => {\r\n        if (this.collection == undefined) {\r\n            this.collection = newCollection;\r\n            this.AddBottom();\r\n        } else {\r\n            this.collection = newCollection;\r\n            this.updateScopes();\r\n        }\r\n    }\r\n\r\n    public AddTop = () => {\r\n        let countTillStop = this.descriptor.Settings.BufferSize;\r\n\r\n        for (var i = this.displayFrom - 1; i >= 0 && countTillStop > 0; i--) {\r\n            const newElement = this.transcludeElement(i);\r\n            this.domManager.PrependElementToContainer(newElement.Element);\r\n            this.items.unshift(newElement);\r\n\r\n            countTillStop--;\r\n        }\r\n\r\n        this.displayFrom = i + 1;\r\n    };\r\n\r\n    public AddBottom = () => {\r\n        // add this many children below visible area\r\n        let overflowCounter = this.descriptor.Settings.BufferSize;\r\n\r\n        for (var i = this.displayTo; i < this.collection.length && overflowCounter > 0; i++) {\r\n            const item = this.transcludeElement(i);\r\n            this.domManager.AppendElementToContainer(item.Element);\r\n            this.items.push(item);\r\n\r\n            const blockEl = item.Element;\r\n            const parentBottom = this.domManager.GetScrollBottomPosition();\r\n            const blockBottom = this.domManager.GetElementBottomPosition(blockEl);\r\n\r\n            if (blockBottom > parentBottom) {\r\n                overflowCounter--;\r\n            }\r\n        }\r\n\r\n        this.displayTo = i;\r\n    };\r\n\r\n    public RemoveTop = () => {\r\n        if (this.items.length < this.descriptor.Settings.BufferSize) {\r\n            return;\r\n        }\r\n\r\n        let hasInvisibleChildren = true;\r\n        while (hasInvisibleChildren) {\r\n            const el = this.items[this.descriptor.Settings.BufferSize].Element;\r\n            const elementBottom = this.domManager.GetElementBottomPosition(el);\r\n            const scrollTop = this.domManager.GetScrollTopPosition();\r\n\r\n            if (elementBottom < scrollTop) {\r\n                this.removeElement(0);\r\n                this.displayFrom++;\r\n            } else {\r\n                hasInvisibleChildren = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    public RemoveBottom = () => {\r\n        if (this.items.length < this.descriptor.Settings.BufferSize) {\r\n            return;\r\n        }\r\n\r\n        let hasInvisibleChildren = true;\r\n        while (hasInvisibleChildren) {\r\n            const el = this.items[this.items.length - this.descriptor.Settings.BufferSize].Element;\r\n            const elementTop = this.domManager.GetElementTopPosition(el);\r\n            const bottom = this.domManager.GetScrollBottomPosition();\r\n\r\n            if (elementTop > bottom) {\r\n                this.removeElement(this.items.length - 1);\r\n                this.displayTo--;\r\n            } else {\r\n                hasInvisibleChildren = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    private updateScopes = () => {\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            const item = this.items[i];\r\n            item.Scope[this.descriptor.IndexString] = this.collection[this.displayFrom + i];\r\n        }\r\n\r\n        // TODO: clean dom if removal took place \r\n    };\r\n\r\n    private transcludeElement = (index: number): Item => {\r\n        const item = {} as Item;\r\n\r\n        const childScope = this.descriptor.Scope.$new();\r\n        childScope[this.descriptor.IndexString] = this.collection[index];\r\n\r\n        this.linker(childScope, (clone: JQLite) => {\r\n            item.Element = clone;\r\n            item.Scope = childScope;\r\n        });\r\n\r\n        return item;\r\n    }\r\n\r\n    private removeElement = (index: number) => {\r\n        const item = this.items.splice(index, 1)[0];\r\n        this.domManager.Remove(item.Element);\r\n        item.Scope.$destroy();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements-manager.ts","import { Descriptor } from \"./descriptor\";\r\nimport { ScrollDetector } from \"./scroll-detector\";\r\nimport { IElementsManager } from \"./elements-manager\";\r\n\r\nexport class Scroller {\r\n    private get scope(): ng.IScope {\r\n        return this.descriptor.Scope;\r\n    }\r\n\r\n    public constructor(private descriptor: Descriptor, private scrollDetector: ScrollDetector, private elementsManager: IElementsManager) {\r\n        this.scrollDetector.OnScrollDown = this.onScrollDown;\r\n        this.scrollDetector.OnScrollUp = this.onScrollUp;\r\n\r\n        this.scrollDetector.SubscribeTo(descriptor.Element);\r\n        \r\n        this.scope.$watchCollection(descriptor.CollectionString, this.onCollectionUpdated);\r\n    }\r\n\r\n    private onCollectionUpdated = (newCollection: any[]): void => {\r\n        this.elementsManager.UpdateCollection(newCollection);\r\n    };\r\n\r\n    private onScrollDown = (): void => {\r\n        this.scope.$apply(() => {\r\n            this.elementsManager.AddBottom();\r\n            this.elementsManager.RemoveTop();\r\n        });\r\n    };\r\n\r\n    private onScrollUp = (): void => {\r\n        this.scope.$apply(() => {\r\n            this.elementsManager.AddTop();\r\n            this.elementsManager.RemoveBottom();\r\n        });\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/scroller.ts","import { Item, IElementsManager } from \"./elements-manager\";\r\nimport { Descriptor } from \"./descriptor\";\r\n\r\ndeclare var angular;\r\n\r\ntype Revealer = {\r\n    Element: JQLite;\r\n    Items: Item[];\r\n}\r\n\r\nexport class RevealerElementsManager implements IElementsManager {\r\n    private collection: any[];\r\n    private container: JQLite;\r\n    private containerElement: HTMLElement;\r\n    private displayFrom: number;\r\n    private displayTo: number;\r\n\r\n    private revealers: Revealer[];\r\n    private revealerSize: number;\r\n\r\n    private BUFFER_COUNT = 5;\r\n    private LOAD_COUNT = 10;\r\n    private REVEALER_SIZE_TO_CONTAINER = 0.75\r\n\r\n    constructor(private descriptor: Descriptor, private linker: ng.ITranscludeFunction) {\r\n        this.revealers = [];\r\n        this.container = descriptor.Element.parent();\r\n        this.containerElement = this.container[0];\r\n        this.displayFrom = 0;\r\n        this.displayTo = 0;\r\n\r\n        // this way the memory can only leak until the scroller lives\r\n        this.descriptor.Scope.$on('$destroy', () => {\r\n            this.revealers = [];\r\n        });\r\n    }\r\n\r\n    public UpdateCollection = (newCollection: any[]) => {\r\n        if (this.collection == undefined) {\r\n            this.collection = newCollection;\r\n            this.InitializeRevealer();\r\n            this.AddBottom();\r\n        } else {\r\n            this.collection = newCollection;\r\n            this.updateScopes();\r\n        }\r\n    }\r\n\r\n    private updateScopes = () => {\r\n        let index = this.displayFrom;\r\n\r\n        for (let revealer of this.revealers) {\r\n            for (let i = 0; i < this.revealerSize; i++) {\r\n                const hasItemToBind = index < this.collection.length;\r\n                const hasElementToBind = revealer.Items.length > i;\r\n\r\n                if (hasItemToBind && hasElementToBind) {\r\n                    // nothing special, bind scope\r\n                    revealer.Items[i].Scope[this.descriptor.IndexString] = this.collection[index];\r\n                } else if (hasItemToBind) {\r\n                    // create element and bind\r\n                    const item = this.transcludeElement(index);\r\n                    revealer.Element.append(item.Element);\r\n                    revealer.Items.push(item);\r\n                } else if (hasElementToBind) {\r\n                    // remove element\r\n                    const item = revealer.Items.pop();\r\n                    item.Scope.$destroy();\r\n                    item.Element.remove();\r\n                } else {\r\n                    continue;\r\n                }\r\n\r\n                index++;\r\n            }\r\n\r\n            if (revealer.Items.length == 0) {\r\n                // remove revealer if it's not necessary anymore\r\n                revealer.Element.remove();\r\n            }\r\n        }\r\n\r\n        const currentDisplayTo = this.displayTo;\r\n        this.displayTo = index;\r\n\r\n        if (index < currentDisplayTo && this.collection.length > index) {\r\n            // create new revealers if necessary\r\n            this.AddBottom();\r\n        } else {\r\n            // remove unnecessary revealers\r\n            this.revealers = this.revealers.filter(r => r.Items.length > 0);\r\n        }\r\n    }\r\n\r\n    public InitializeRevealer = () => {\r\n        const newRevealer = this.createRevealer();\r\n        this.revealers.push(newRevealer);\r\n        this.container.append(newRevealer.Element);\r\n\r\n        let i = 0;\r\n        let isRevealerFilled = false;\r\n\r\n        while (!isRevealerFilled) {\r\n            const item = this.transcludeElement(i);\r\n            newRevealer.Element.append(item.Element);\r\n            newRevealer.Items.push(item);\r\n\r\n            const blockEl = item.Element[0];\r\n            const fillUntil = this.containerElement.offsetTop + this.containerElement.offsetHeight * this.REVEALER_SIZE_TO_CONTAINER;\r\n            const blockBottom = blockEl.offsetTop + blockEl.offsetHeight;\r\n\r\n            if (blockBottom > fillUntil) {\r\n                /* \r\n                    i had no better idea how to detect bottom line for the case of using floats,\r\n                    so when the first element passes the line, let's just correct it by removing that one\r\n                 */\r\n                const item = newRevealer.Items.pop();\r\n                item.Scope.$destroy();\r\n                item.Element.remove();\r\n\r\n                isRevealerFilled = true;\r\n                break;\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        this.revealerSize = i;\r\n        this.displayTo = i;\r\n    };\r\n\r\n    public AddTop = () => {\r\n        if (this.displayFrom == 0) {\r\n            return;\r\n        }\r\n\r\n        const newRevealer = this.createRevealer();\r\n        this.revealers.unshift(newRevealer);\r\n        this.container.prepend(newRevealer.Element);\r\n\r\n        let countTillStop = this.LOAD_COUNT;\r\n\r\n        for (var i = 0; i < this.revealerSize; i++) {\r\n            const index = this.displayFrom + 1 - i;\r\n            if (index < 0) {\r\n                break;\r\n            }\r\n\r\n            const newElement = this.transcludeElement(this.displayFrom - 1 - i);\r\n            newRevealer.Element.prepend(newElement.Element);\r\n            newRevealer.Items.unshift(newElement);\r\n        }\r\n\r\n        this.displayFrom -= i;\r\n    };\r\n\r\n    public AddBottom = () => {\r\n        if (this.displayTo == this.collection.length) {\r\n            return;\r\n        }\r\n\r\n        const newRevealer = this.createRevealer();\r\n        this.revealers.push(newRevealer);\r\n        this.container.append(newRevealer.Element);\r\n\r\n        for (var i = 0; i < this.revealerSize && this.displayTo + i < this.collection.length; i++) {\r\n            const item = this.transcludeElement(this.displayTo + i);\r\n            newRevealer.Element.append(item.Element);\r\n            newRevealer.Items.push(item);\r\n        }\r\n\r\n        this.displayTo += i;\r\n    };\r\n\r\n    public RemoveTop = () => {\r\n        if (this.revealers.length <= 3) {\r\n            return;\r\n        }\r\n\r\n        const revealer = this.revealers.shift();\r\n        this.displayFrom += revealer.Items.length;\r\n\r\n        while (revealer.Items.length > 0) {\r\n            const item = revealer.Items.pop();\r\n            item.Element.remove(); // TODO: might be unnecessary, since we remove the revealer too\r\n            item.Scope.$destroy();\r\n        }\r\n\r\n        revealer.Element.remove();\r\n    };\r\n\r\n    public RemoveBottom = () => {\r\n        if (this.revealers.length <= 3) {\r\n            return;\r\n        }\r\n\r\n        const revealer = this.revealers.pop();\r\n        this.displayTo -= revealer.Items.length;\r\n\r\n        while (revealer.Items.length > 0) {\r\n            const item = revealer.Items.pop();\r\n            item.Element.remove(); // TODO: might be unnecessary, since we remove the revealer too\r\n            item.Scope.$destroy();\r\n        }\r\n\r\n        revealer.Element.remove();\r\n        this.containerElement.scrollTo(0, this.containerElement.offsetHeight / 2);\r\n    };\r\n\r\n    private transcludeElement = (index: number): Item => {\r\n        const item = {} as Item;\r\n\r\n        const childScope = this.descriptor.Scope.$new();\r\n        childScope[this.descriptor.IndexString] = this.collection[index];\r\n\r\n        this.linker(childScope, (clone: JQLite) => {\r\n            item.Element = clone;\r\n            item.Scope = childScope;\r\n        });\r\n\r\n        return item;\r\n    }\r\n\r\n    private createRevealer = (): Revealer => {\r\n        const revealerElement = angular.element('<div class=\"revealer\"></div>');\r\n\r\n        const revealer: Revealer = {\r\n            Element: revealerElement,\r\n            Items: []\r\n        };\r\n\r\n        return revealer;\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/revealer-elements-manager.ts","export interface IDOMManager {\r\n    AppendElementToContainer(element: JQLite): void;\r\n    PrependElementToContainer(element: JQLite): void;\r\n\r\n    GetScrollBottomPosition(): number;\r\n    GetScrollTopPosition(): number;\r\n\r\n    GetElementBottomPosition(element: JQLite): number;\r\n    GetElementTopPosition(element: JQLite): number;\r\n\r\n    Remove(element: JQLite): void;\r\n}\r\n\r\nexport class DOMManager implements IDOMManager {\r\n    private containerElement: HTMLElement;\r\n\r\n    constructor(private container: JQLite) {\r\n        this.containerElement = this.container[0];\r\n    }\r\n\r\n    GetElementTopPosition(element: JQLite): number {\r\n        return element[0].offsetTop;\r\n    }\r\n    Remove(element: JQLite): void {\r\n        element.remove();\r\n    }\r\n    GetScrollTopPosition = () => {\r\n        return this.containerElement.offsetTop + this.containerElement.scrollTop;\r\n    }\r\n    GetElementBottomPosition(element: JQLite) {\r\n        return element[0].offsetTop + element[0].offsetHeight;\r\n    }\r\n    GetScrollBottomPosition = () => {\r\n        return this.containerElement.offsetTop + this.containerElement.scrollTop + this.containerElement.offsetHeight;\r\n    }\r\n    AppendElementToContainer = (element: JQLite) => {\r\n        this.container.append(element);\r\n    }\r\n    PrependElementToContainer = (element: JQLite) => {\r\n        this.container.prepend(element);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dom-manager.ts"],"sourceRoot":""}